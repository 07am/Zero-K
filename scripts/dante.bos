//linear constant 163840

#include "constants.h"

piece  base, pelvis, torso, tail, flagellum, ruparm, rarm, rshield,
lshield, luparm, larm, rupleg, lupleg, lleg, rleg, rfoot, lfoot, 
rtoef, rtoer, ltoef, ltoer, rf1, rf2, rf3, rbak1, rbak2, 
lbak1, lbak2, lf1, lf2, lf3, flame1, flame2, jet1, jet2, fix;

static-var  bMoving, bAiming, Static_Var_3, restore_delay, dgunning, 
aimer, gun1, gun2, dead, reloading;

#define SIG_AIM				2
#define SIG_AIM_2			4
#define SIG_AIM_3			8
#define SIG_AIM_4			16
#define SIG_RESTORE			32
#define SIG_RELOAD			64
#define RELOADTIME			20000
#define SALVO_TIME			1000
//#define SIG_AIM_4			//16 //repair?

//#ifndef MAX_SPEED
//#define MAX_SPEED 75
//#endif 

lua_FlameShot(weapon) //flame effect
{
  return 0;
}

RestoreAfterDelay()
{
	signal SIG_RESTORE;
	set-signal-mask SIG_RESTORE;
	sleep 8000;
	//torso	
	if (dead ==0)
	{
		turn torso to x-axis <0> speed <250>;
		turn torso to y-axis <0> speed <250>;
		turn torso to z-axis <0> speed <250>;	
		
		turn ruparm to x-axis <0> speed <250>; 
		turn ruparm to y-axis <0> speed <250>; 
		turn ruparm to z-axis <0> speed <250>; 
		turn rarm to x-axis <0> speed <250>;      //up 2
		turn rarm to y-axis <0> speed <250>;  
		turn rarm to z-axis <0> speed <250>;    //up -12
		turn flagellum to x-axis (<0>) speed <90>;
		//left
		turn luparm to x-axis <0> speed <250>;       //up -9
		turn luparm to y-axis <0> speed <250>;  
		turn luparm to z-axis <0> speed <250>;  
		turn larm to x-axis <0> speed <250>;       //up 5
		turn larm to y-axis <0> speed <250>;       //up -3
		turn larm to z-axis <0> speed <250>;       //up 22
	bAiming = 0;
	}
}

walk()
{
	if( bMoving == TRUE )
		{
		turn lupleg to x-axis <20.016484> speed <50.010989>;
		turn rupleg to x-axis <-20.016484> speed <50.010989>;
		turn lfoot to x-axis <-15.016484> speed <70.016484>;
		turn rfoot to x-axis <5> speed <50.010989>;
		turn rleg to x-axis <-10> speed <70.016484>;
	
		turn torso to x-axis <-1> speed <5>;
		turn ruparm to y-axis <-2.50> speed <25>;
		turn luparm to y-axis <-2.50> speed <25>;
		sleep 304;
		}
		
	if( bMoving == TRUE )
		{
		turn lfoot to x-axis <20.016484> speed <100.021978>;
		turn rfoot to x-axis <10> speed <50.010989>;
		turn rleg to x-axis <20.016484> speed <100.021978>;
		turn ltoef to x-axis <22.5016484> speed <100.021978>;
		turn ltoer to x-axis <-22.5016484> speed <100.021978>;
		turn rtoef to x-axis <0> speed <100.021978>;
		sleep 360;
		}
		
	if( bMoving == TRUE )
		{	
		turn rtoer to x-axis <0> speed <100.021978>;
		move pelvis to y-axis [0] speed [2];
		turn pelvis to z-axis <-3.50> speed <3>;
		turn lupleg to x-axis <-20.016484> speed <50.010989>;
		turn rupleg to x-axis <20.016484> speed <50.010989>;
		turn rfoot to x-axis <-20.016484> speed <130.027473>;
		turn lleg to x-axis <-20.016484> speed <100.021978>;
		sleep 650;
		}
		
	if( bMoving == TRUE )
		{
		turn rfoot to x-axis <20.016484> speed <100.021978>;
		turn lleg to x-axis <20.016484> speed <100.021978>;
		move pelvis to y-axis [0] speed [2];
		turn ltoef to x-axis <0> speed <100.021978>;
		turn rtoef to x-axis <22.5016484> speed <100.021978>;
		turn rtoer to x-axis <-22.5016484> speed <100.021978>;
		sleep 360;
		}
		
	if( bMoving == TRUE )
		{
		turn ltoer to x-axis <0> speed <100.021978>;
		move pelvis to y-axis [4] speed [2];
		turn pelvis to z-axis <3.5> speed <8>;
		turn lupleg to x-axis <20.016484> speed <50.010989>;
		turn rupleg to x-axis <-20.016484> speed <50.010989>;
		turn lfoot to x-axis <-20.016484> speed <130.027473>;
		turn rleg to x-axis <-20.016484> speed <100.021978>;
	
		turn torso to y-axis <2.5> speed <12>;
		turn torso to x-axis <1> speed <6>;;
		turn ruparm to y-axis <2.5> speed <25>;
		turn luparm to y-axis <2.5> speed <25>;
		sleep 650;
		}
	
	if( bMoving == TRUE )
		{		
		turn lfoot to x-axis <20.016484> speed <100.021978>;
		turn rfoot to x-axis <20.016484> speed <70.016484>;
		turn rleg to x-axis <20.016484> speed <100.021978>;
		move pelvis to y-axis [0] speed [2];
		turn ltoef to x-axis <22.5016484> speed <100.021978>;
		turn ltoer to x-axis <-22.5016484> speed <100.021978>;
		turn rtoef to x-axis <0> speed <100.021978>;
		sleep 360;
		}
			
	if( bMoving == TRUE )
		{
		turn rtoer to x-axis <0> speed <100.021978>;
		move pelvis to y-axis [4] speed [2];
		turn pelvis to z-axis <-3.50> speed <8>;
		turn lupleg to x-axis <-20.016484> speed <50.010989>;
		turn rupleg to x-axis <20.016484> speed <50.010989>;
		turn rfoot to x-axis <-20.016484> speed <130.027473>;
		turn lleg to x-axis <-20.016484> speed <100.021978>;
		
		turn torso to y-axis <-2.5> speed <12>;
		turn torso to x-axis <-1> speed <6>;
		turn ruparm to y-axis <5> speed <25>;
		turn luparm to y-axis <5> speed <25>;
		sleep 650;
		}

	if( bMoving == TRUE )
		{
		turn rfoot to x-axis <20.016484> speed <100.021978>;
		turn lleg to x-axis <20.016484> speed <100.021978>;
		move pelvis to y-axis [0] speed [2];
		turn ltoef to x-axis <0> speed <100.021978>;
		turn rtoef to x-axis <22.5016484> speed <100.021978>;
		turn rtoer to x-axis <-22.5016484> speed <100.021978>;
		sleep 360;
		}
	turn ltoer to x-axis <0> speed <100.021978>;
	move pelvis to y-axis [4] speed [2];
	turn pelvis to z-axis <3.5> speed <8>;
	sleep 2;

}

walklegs()
{
		if( bMoving == TRUE )
		{
		turn lupleg to x-axis <20.016484> speed <50.010989>;
		turn rupleg to x-axis <-20.016484> speed <50.010989>;
		turn lfoot to x-axis <-15.016484> speed <70.016484>;
		turn rfoot to x-axis <5> speed <50.010989>;
		turn rleg to x-axis <-10> speed <70.016484>;
		sleep 304;
		}
		
	if( bMoving == TRUE )
		{
		turn lfoot to x-axis <20.016484> speed <100.021978>;
		turn rfoot to x-axis <10> speed <50.010989>;
		turn rleg to x-axis <20.016484> speed <100.021978>;
		turn ltoef to x-axis <22.5016484> speed <100.021978>;
		turn ltoer to x-axis <-22.5016484> speed <100.021978>;
		turn rtoef to x-axis <0> speed <100.021978>;
		sleep 360;
		}
		
	if( bMoving == TRUE )
		{	
		turn rtoer to x-axis <0> speed <100.021978>;
		move pelvis to y-axis [0] speed [2];
		turn pelvis to z-axis <-3.50> speed <3>;
		turn lupleg to x-axis <-20.016484> speed <50.010989>;
		turn rupleg to x-axis <20.016484> speed <50.010989>;
		turn rfoot to x-axis <-20.016484> speed <130.027473>;
		turn lleg to x-axis <-20.016484> speed <100.021978>;
		sleep 650;
		}
		
	if( bMoving == TRUE )
			{
		turn rfoot to x-axis <20.016484> speed <100.021978>;
		turn lleg to x-axis <20.016484> speed <100.021978>;
		move pelvis to y-axis [0] speed [2];
		turn ltoef to x-axis <0> speed <100.021978>;
		turn rtoef to x-axis <22.5016484> speed <100.021978>;
		turn rtoer to x-axis <-22.5016484> speed <100.021978>;
		sleep 360;
		}
		
	if( bMoving == TRUE )
			{
		turn ltoer to x-axis <0> speed <100.021978>;
		move pelvis to y-axis [2] speed [2];
		turn pelvis to z-axis <3.5> speed <8>;
		turn lupleg to x-axis <20.016484> speed <50.010989>;
		turn rupleg to x-axis <-20.016484> speed <50.010989>;
		turn lfoot to x-axis <-20.016484> speed <130.027473>;
		turn rleg to x-axis <-20.016484> speed <100.021978>;
			sleep 650;
			}
	
		if( bMoving == TRUE )
			{		
			turn lfoot to x-axis <20.016484> speed <100.021978>;
			turn rfoot to x-axis <20.016484> speed <70.016484>;
			turn rleg to x-axis <20.016484> speed <100.021978>;
			move pelvis to y-axis [0] speed [2];
			turn ltoef to x-axis <22.5016484> speed <100.021978>;
			turn ltoer to x-axis <-22.5016484> speed <100.021978>;
			turn rtoef to x-axis <0> speed <100.021978>;
			sleep 360;
			}
			
		if( bMoving == TRUE )
			{
			turn rtoer to x-axis <0> speed <100.021978>;
			move pelvis to y-axis [2] speed [2];
			turn pelvis to z-axis <-3.50> speed <8>;
			turn lupleg to x-axis <-20.016484> speed <50.010989>;
			turn rupleg to x-axis <20.016484> speed <50.010989>;
			turn rfoot to x-axis <-20.016484> speed <130.027473>;
			turn lleg to x-axis <-20.016484> speed <100.021978>;
		sleep 650;
			}

		if( bMoving == TRUE )
			{
			turn rfoot to x-axis <20.016484> speed <100.021978>;
			turn lleg to x-axis <20.016484> speed <100.021978>;
			move pelvis to y-axis [0] speed [2];
			turn ltoef to x-axis <0> speed <100.021978>;
			turn rtoef to x-axis <22.5016484> speed <100.021978>;
			turn rtoer to x-axis <-22.5016484> speed <100.021978>;
			sleep 360;
			}
			turn ltoer to x-axis <0> speed <100.021978>;
			move pelvis to y-axis [2] speed [2];
			turn pelvis to z-axis <3.5> speed <8>;
			sleep 2;
	}


MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = bAiming;
		if( moving )
		{
			if( aiming )
			{
				Static_Var_3 = 1;
				call-script walklegs();
			}
			if( !aiming )
			{
				Static_Var_3 = 0;
				call-script walk();
			}
			justmoved = TRUE;
		}
		if( !moving )
		{
			Static_Var_3 = 1;
			if( justmoved )
			{
					turn lupleg to x-axis <0> speed <50.010989>;
					turn rupleg to x-axis <0> speed <50.010989>;
					turn lleg to x-axis <0> speed <100.021978>;
					turn rleg to x-axis <0> speed <100.021978>;
					move pelvis to y-axis [0] speed [20];
					turn pelvis to z-axis <0> speed <20>;
					turn rtoef to x-axis <0> speed <100.021978>;
					turn rtoer to x-axis <0> speed <100.021978>;
					turn ltoef to x-axis <0> speed <100.021978>;
					turn ltoer to x-axis <0> speed <100.021978>;
					turn rfoot to x-axis <0> speed <100.021978>;
					turn lfoot to x-axis <0> speed <100.021978>;
				if( !aiming )
				{
				turn torso to y-axis <0> speed <100.021978>;
				turn torso to x-axis <0> speed <20>;
				}
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

Create()
{
//alert to dirt
	hide flame1;
	hide flame2;
	hide rf1;
	hide rf2;
	hide rf3;
	hide lf1;
	hide lf2;
	hide lf3;
	hide jet1;
	hide jet2;
	aimer = 1; 
	gun1 = 0; //for missiles
	gun2 = 0;  //for flamers
	dead = 0;
	bMoving = FALSE;
	bAiming = 0;
	dgunning = FALSE;
	Static_Var_3 = 1;
	reloading = FALSE;
	start-script MotionControl();
	start-script RestoreAfterDelay();
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
}

StartMoving()
{	
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}


ReloadRockets()
{
	signal SIG_RELOAD;
	set-signal-mask SIG_RELOAD;
	reloading = TRUE;
	sleep RELOADTIME;
	reloading = FALSE;
}

AimFromWeapon1(piecenum)
{
	piecenum = torso; //better angle
}

QueryWeapon1(piecenum)
{
	if (gun1 == 1)
	{
		piecenum = rf1;
	}
	if (gun1 == 2)
	{
		piecenum = lf1;
	}
	if (gun1 == 3)
	{
		piecenum = rf2;
	}
	if (gun1 == 4)
	{
		piecenum = lf2;
	}
	if (gun1 == 5)
	{
		piecenum = rf3;
	}
	if (gun1 == 0)
	{
		piecenum = lf3;
	}
}

AimWeapon1(Func_Var_1, Func_Var_2)
{
	if ( dgunning )	return 0;
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;

	turn ruparm to x-axis <-20> speed <250>;
	turn luparm to x-axis <-20> speed <250>;
	turn torso to y-axis Func_Var_1 speed <250>;
	turn rarm to x-axis <20> - Func_Var_2 speed <250>;
	turn larm to x-axis <20> - Func_Var_2 speed <250>;
	wait-for-turn torso around y-axis;
	wait-for-turn larm around x-axis;  //need to make sure!
	if ( reloading == TRUE ) { return (0); }
	return (1);
}

Shot1()
{
  if (gun1 == 0)
	{
	emit-sfx 1024 from rf1;
	emit-sfx 1025 from rbak1;
	emit-sfx 1025 from rbak2;
	gun1 = 1;
	return 0;
	}
  if (gun1 == 1)
	{
	emit-sfx 1024 from lf1;
	emit-sfx 1025 from lbak1;
	emit-sfx 1025 from lbak2;
	gun1 = 2;
	return 0;
	}
  if (gun1 == 2)
	{
	emit-sfx 1024 from rf1;
	emit-sfx 1025 from rbak1;
	emit-sfx 1025 from rbak2;
	gun1 = 3;
	return 0;
	}
  if (gun1 == 3)
	{
	emit-sfx 1024 from lf2;
	emit-sfx 1025 from lbak1;
	emit-sfx 1025 from lbak2;
	gun1 = 4;
	return 0;
	}
  if (gun1 == 4)
	{
	emit-sfx 1024 from rf3;
	emit-sfx 1025 from rbak1;
	emit-sfx 1025 from rbak2;
	gun1 = 5;
	return 0;
	}
  if (gun1 == 5)
	{
	emit-sfx 1024 from lf3;
	emit-sfx 1025 from lbak1;
	emit-sfx 1025 from lbak2;
	gun1 = 0;
	return 0;
	}
}

AimFromWeapon2(piecenum)
{
	piecenum = torso; 
}

QueryWeapon2(piecenum)
{
	if (gun2 == 0)
	{
		piecenum = flame1;
	}
	if (gun2 == 1)
	{
		piecenum = flame2;
	}
}

Shot2()
{
	gun2 = 1 - gun2;
}

AimWeapon2(Func_Var_1, Func_Var_2)
{
	if ( dgunning )	return 0;
	//signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;
	turn torso to y-axis Func_Var_1 speed <200>;
	wait-for-turn torso around y-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimFromWeapon3(piecenum)
{
	piecenum = torso; //better angle
}

QueryWeapon3(piecenum)
{
if (gun1 == 1)
	{
	piecenum = rf1;
	}
if (gun1 == 2)
	{
	piecenum = lf1;
	}
if (gun1 == 3)
	{
	piecenum = rf2;
	}
if (gun1 == 4)
	{
	piecenum = lf2;
	}
if (gun1 == 5)
	{
	piecenum = rf3;
	}
if (gun1 == 0)
	{
	piecenum = lf3;
	}
}

AimWeapon3(Func_Var_1, Func_Var_2)
{
	signal SIG_AIM;
	signal SIG_AIM_3;
	set-signal-mask SIG_AIM_3;
	bAiming = TRUE;
	while( !Static_Var_3 )
	{
		sleep 5;
	}
	if ( aimer == 2 )
	{
	return 0;
	}
	if ( aimer == 1 )
	{
	turn ruparm to x-axis <-20> speed <250>;
	turn luparm to x-axis <-20> speed <250>;
	turn torso to y-axis Func_Var_1 speed <250>;
	turn rarm to x-axis <20> - Func_Var_2 speed <250>;
	turn larm to x-axis <20> - Func_Var_2 speed <250>;
	wait-for-turn torso around y-axis;
	wait-for-turn larm around x-axis;  //need to make sure!
	start-script RestoreAfterDelay();
	return (1);
	}
}

FireWeapon3()
{
	signal SIG_AIM;
	signal SIG_AIM_3;
	start-script ReloadRockets();
	dgunning = TRUE;
	sleep SALVO_TIME;
	dgunning = FALSE; 
}

Shot3()
{
  if (gun1 == 0)
	{
	emit-sfx 1024 from rf1;
	emit-sfx 1025 from rbak1;
	emit-sfx 1025 from rbak2;
	gun1 = 1;
	return 0;
	}
  if (gun1 == 1)
	{
	emit-sfx 1024 from lf1;
	emit-sfx 1025 from lbak1;
	emit-sfx 1025 from lbak2;
	gun1 = 2;
	return 0;
	}
  if (gun1 == 2)
	{
	emit-sfx 1024 from rf1;
	emit-sfx 1025 from rbak1;
	emit-sfx 1025 from rbak2;
	gun1 = 3;
	return 0;
	}
  if (gun1 == 3)
	{
	emit-sfx 1024 from lf2;
	emit-sfx 1025 from lbak1;
	emit-sfx 1025 from lbak2;
	gun1 = 4;
	return 0;
	}
  if (gun1 == 4)
	{
	emit-sfx 1024 from rf3;
	emit-sfx 1025 from rbak1;
	emit-sfx 1025 from rbak2;
	gun1 = 5;
	return 0;
	}
  if (gun1 == 5)
	{
	emit-sfx 1024 from lf3;
	emit-sfx 1025 from lbak1;
	emit-sfx 1025 from lbak2;
	gun1 = 0;
	return 0;
	}
}

AimWeapon4(heading, pitch)
{
	if ( dgunning )	return 0;
	signal SIG_AIM_4;
	set-signal-mask SIG_AIM;
	set-signal-mask SIG_AIM_4;
	bAiming = TRUE;

	turn ruparm to x-axis <-20> speed <250>;
	turn flagellum to x-axis (<20> - pitch) speed <90>;
	turn torso to y-axis heading speed <250>;
	wait-for-turn ruparm around x-axis;
	wait-for-turn flagellum around x-axis;
	wait-for-turn torso around y-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimFromWeapon4(piecenum)
{	piecenum = flagellum; }

QueryWeapon4(piecenum)
{	piecenum = fix;	}

Shot4()
{
	call-script lua_FlameShot(4);
	emit-sfx 1026 from flagellum;
}

/*
AimWeapon3(Func_Var_1, Func_Var_2)
{	
	return (1); //stomp
}

AimFromWeapon3(piecenum)
{
	piecenum = base;
}

QueryWeapon3(piecenum)
{
	piecenum = base;
}

FireWeapon3()
{
sleep 100;
}
*/


burn()
{
	while ( dead )
	{
	emit-sfx 1026 from tail;  //flames
	emit-sfx 256 | 1 from tail;
	sleep 300;
	}
	sleep 200;
}

Killed(severity, corpsetype)
{
	dead = 1;
	turn torso to y-axis <0> speed <200>;
	
	if( severity <= 50 ) { corpsetype = 1; }
	if( severity <= 98 )
	{
		turn base to x-axis <71> speed <70>;
		turn torso to x-axis <-31> speed <50>;
		turn ruparm to x-axis <-41> speed <50>;
		turn ruparm to y-axis <-11> speed <50>;
		turn rarm to x-axis <-6> speed <50>; //was 0
		turn flagellum to x-axis <49> speed <50>;
		turn flagellum to y-axis <14> speed <50>;
		turn luparm to y-axis <54> speed <50>;
		turn rupleg to x-axis <-27> speed <50>;
		turn rupleg to y-axis <-42> speed <50>;
		turn rupleg to z-axis <-5> speed <50>;		
		turn rleg to x-axis <13> speed <50>;
		turn rleg to y-axis <-36> speed <50>;
		turn rleg to z-axis <24> speed <50>;	
		turn lupleg to y-axis <18> speed <50>;
		turn lleg to x-axis <20> speed <50>;
		turn lleg to y-axis <28> speed <50>;
		turn lfoot to x-axis <23> speed <50>;
		sleep 800;
		//emit-sfx 1027 from torso; //impact
		//start-script burn();
    	//sleep (1000 * rand (2 , 5));

    	explode pelvis type BITMAPONLY;
		explode luparm type BITMAPONLY;
		explode lleg type BITMAPONLY;
		explode lupleg type BITMAPONLY;
		explode rarm type BITMAPONLY;
		explode rleg type BITMAPONLY;
		explode ruparm type BITMAPONLY;
		explode rupleg type BITMAPONLY;
		explode torso type BITMAPONLY;
    	corpsetype = 2;
	}
	if( severity >= 99 )
	{
		explode pelvis type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP4;
		explode luparm type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP1;
		explode lleg type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP2;
		explode lupleg type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP4;
		explode rarm type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP5;
		explode rleg type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP1;
		explode ruparm type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP2;
		explode rupleg type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP3;
		explode torso type SHATTER | EXPLODE_ON_HIT | BITMAP5;
		corpsetype = 2;
	}

}
