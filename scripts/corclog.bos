#include "constants.h"

piece  pelvis, rfoot,
       rcalf, lcalf, lfoot, lthigh, rthigh, base, box;

static-var  bMoving, Static_Var_2, Static_Var_3, Static_Var_4;



Sounds()
{
	play-sound("freedroid/brik_hit", 10);
	#define death 0
}


walk()
{

	if (bMoving)
		{
			turn lthigh to x-axis <70> speed<230>;
//			turn lknee to x-axis <-40> speed<270>;
			turn lcalf to x-axis <20> speed<270>;
			turn lfoot to x-axis <-100> speed<420>;
			
			turn rthigh to x-axis <-20> speed<420>;
//			turn rknee to x-axis <-60> speed<420>;
			turn rcalf to x-axis <50> speed<420>;
			turn rfoot to x-axis <30> speed<420>;
			
			turn pelvis to z-axis <5> speed <40>;
			turn lthigh to z-axis <-5> speed <40>;
			turn rthigh to z-axis <-5> speed <40>;
			move pelvis to y-axis [0.7] speed <8000>;
			turn box to x-axis <-10> speed <40>;
			wait-for-turn lthigh around x-axis;
			
			turn lthigh to x-axis <-10> speed<320>;
//			turn lknee to x-axis <15> speed<270>;
			turn lcalf to x-axis <-60> speed<500>;
			turn lfoot to x-axis <70> speed<270>;
			
			turn rthigh to x-axis <40> speed<270>;
//			turn rknee to x-axis <-35> speed<270>;
			turn rcalf to x-axis <-40> speed<270>;
			turn rfoot to x-axis <0> speed<270>;
			
			move pelvis to y-axis <0> speed <8000>;
			turn box to x-axis <10> speed <40>;
			wait-for-turn lcalf around x-axis;
			
			turn rthigh to x-axis <70> speed<230>;
//			turn rknee to x-axis <-40> speed<270>;
			turn rcalf to x-axis <20> speed<270>;
			turn rfoot to x-axis <-100> speed<420>;
			
			turn lthigh to x-axis <-20> speed<420>;
//			turn lknee to x-axis <-60> speed<420>;
			turn lcalf to x-axis <50> speed<420>;
			turn lfoot to x-axis <-30> speed<420>;
			
			turn pelvis to z-axis <-5> speed <40>;
			turn lthigh to z-axis <5> speed <40>;
			turn rthigh to z-axis <5> speed <40>;
			move pelvis to y-axis [0.7] speed <8000>;
			turn box to x-axis <-10> speed <40>;
			wait-for-turn rthigh around x-axis;
			
			turn rthigh to x-axis <-10> speed<320>;
//			turn rknee to x-axis <15> speed<270>;
			turn rcalf to x-axis <-60> speed<500>;
			turn rfoot to x-axis <70> speed<270>;
			
			turn lthigh to x-axis <40> speed<270>;
//			turn lknee to x-axis <-35> speed<270>;
			turn lcalf to x-axis <-40> speed<270>;
			turn lfoot to x-axis <0> speed<270>;
			
			
			move pelvis to y-axis <0> speed <8000>;
			turn box to x-axis <10> speed <40>;
			wait-for-turn rcalf around x-axis;
			
			}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from box;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		bmoving = bMoving;
		if( bmoving )
		{
			call-script walk();
			justmoved = TRUE;
		}
		if( !bmoving )
		{
			Static_Var_3 = 1;
			if( justmoved )
			{
				move pelvis to y-axis [0.000000] speed [1.000000];
				turn rthigh to x-axis <0.000000> speed <200.000000>;
				turn rcalf to x-axis <0.000000> speed <200.000000>;
				turn rfoot to x-axis <0.000000> speed <200.000000>;
				turn lthigh to x-axis <0.000000> speed <200.000000>;
				turn lcalf to x-axis <0.000000> speed <200.000000>;
				turn lfoot to x-axis <0.000000> speed <200.000000>;
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

Create()
{
	bMoving = 0;
	Static_Var_2 = 0;
	Static_Var_3 = 1;
	Static_Var_4 = 0;
	start-script MotionControl();
	start-script SmokeUnit();
}


RestoreAfterDelay()
{
	sleep 2750;
	turn box to y-axis <0.000000> speed <90.021978>;
	
	Static_Var_2 = 0;
}

StartMoving()
{
	bMoving = 1;
}

StopMoving()
{
	bMoving = 0;
}

SweetSpot(piecenum)
{
	piecenum = box;
}

Killed(severity, corpsetype)
{
    get PLAY_SOUND(death, 655360,1,0);
    explode box type SHATTER | SMOKE | BITMAP2;
    return (4); //leave no wreckage
}
