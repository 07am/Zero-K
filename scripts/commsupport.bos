#define TA			// This is a TA script

#include "constants.h"

piece  base, pelvis, turret, torso, head, armhold, ruparm, rarm, rloarm, 
luparm, larm, lloarm, rupleg, lupleg, lloleg, rloleg, rfoot, lfoot, gun, 
flare, rhand, lhand, gunpod, ac1, ac2, nanospray;

static-var  bMoving, bAiming, Static_Var_3, restore_delay, Static_Var_5, Static_Var_6, aimer, gun1, iscloak, dead, reloading;

#define SIG_AIM				2
#define SIG_AIM_2			4
#define SIG_AIM_3			8 //step on

//#ifndef MAX_SPEED
//#define MAX_SPEED 75
//#endif 

RestoreAfterDelay()
{
sleep 6000;

if (dead == 0)
	{
	turn turret to x-axis <0.000000> speed <150.000000>;
	turn turret to y-axis <0.000000> speed <150.000000>;
	//torso	
	turn torso to x-axis <0.000000> speed <250.000000>;
	turn torso to y-axis <0.000000> speed <250.000000>;
	turn torso to z-axis <0.000000> speed <250.000000>;	
	//head	
	turn head to x-axis <0.000000> speed <250.000000>;
	turn head to y-axis <0.000000> speed <250.000000>;
	turn head to z-axis <0.000000> speed <250.000000>;
	
	// at ease pose
	turn armhold to x-axis <-45.000000> speed <250.000000>; //upspring at -45
	turn ruparm to x-axis <0.000000> speed <250.000000>; 
	turn ruparm to y-axis <0.000000> speed <250.000000>; 
	turn ruparm to z-axis <0.000000> speed <250.000000>; 
	turn rarm to x-axis <2.000000> speed <250.000000>;      //up 2
	turn rarm to y-axis <0.000000> speed <250.000000>;  
	turn rarm to z-axis <-12.000000> speed <250.000000>;    //up -12
	turn rloarm to x-axis <47.000000> speed <250.000000>;   //up 47
	turn rloarm to y-axis <76.000000> speed <250.000000>;   //up 76
	turn rloarm to z-axis <-47.000000> speed <250.000000>;   //up -47
	//left
	turn luparm to x-axis <12.000000> speed <250.000000>;       //up -9
	turn luparm to y-axis <0.000000> speed <250.000000>;  
	turn luparm to z-axis <0.000000> speed <250.000000>;  
	turn larm to x-axis <-35.000000> speed <250.000000>;       //up 5
	turn larm to y-axis <-3.000000> speed <250.000000>;       //up -3
	turn larm to z-axis <22.000000> speed <250.000000>;       //up 22
	turn lloarm to x-axis <92.000000> speed <250.000000>;    // up 82
	turn lloarm to y-axis <0.000000> speed <250.000000>;  
	turn lloarm to z-axis <94.000000> speed <250.000000>;  //upspring 94
	
	turn gun to x-axis <0.0> speed <250.000000>;
	turn gun to y-axis <0.0> speed <250.000000>;
	turn gun to z-axis <0.0> speed <250.000000>;
	// done at ease
	sleep 100;
	bAiming = 0;
	}
}

walk()
{
	if( TRUE )
	{
		turn torso to x-axis <12> now; //tilt forward
		move pelvis to y-axis [0] now;
		turn rupleg to x-axis <5.670330> now;
		turn lupleg to x-axis <-26.467033> now;
		turn torso to y-axis <3.335165> now;
		turn lloleg to x-axis <26.967033> now;
		turn rloleg to x-axis <26.967033> now;
		turn rfoot to x-axis <-19.824176> now;
		sleep 90; //had to + 20 to all sleeps in walk
	}
	if( TRUE )
	{
		turn rupleg to x-axis <-5.269231> now;
		turn lupleg to x-axis <-20.989011> now;
		turn torso to y-axis <1.681319> now;
		turn lloleg to x-axis <20.945055> now;
		turn rloleg to x-axis <41.368132> now;
		turn rfoot to x-axis <-15.747253> now;
		sleep 70;
	}
	if( TRUE )
	{
		turn rupleg to x-axis <-9.071429> now;
		turn lupleg to x-axis <-12.670330> now;
		turn torso to y-axis <0.000000> now;
		turn lloleg to x-axis <12.670330> now;
		turn rloleg to x-axis <43.571429> now;
		turn rfoot to x-axis <-12.016484> now;
		sleep 50;
	}
	if( TRUE )
	{
		turn rupleg to x-axis <-21.357143> now;
		turn lupleg to x-axis <2.824176> now;
		turn torso to y-axis <-1.769231> now;
		turn lloleg to x-axis <3.560440> now;
		turn lfoot to x-axis <-4.527473> now;
		turn rloleg to x-axis <52.505495> now;
		turn rfoot to x-axis <0.000000> now;
		sleep 40;
	}
	if( TRUE )
	{
		turn rupleg to x-axis <-35.923077> now;
		turn lupleg to x-axis <7.780220> now;
		turn torso to y-axis <-3.148352> now;
		turn lloleg to x-axis <8.203297> now;
		turn lfoot to x-axis <-12.571429> now;
		turn rloleg to x-axis <54.390110> now;
		sleep 50;
	}
	if( TRUE )
	{
		turn rupleg to x-axis <-37.780220> now;
		turn lupleg to x-axis <10.137363> now;
		turn torso to y-axis <-4.203297> now;
		turn lloleg to x-axis <13.302198> now;
		turn lfoot to x-axis <-16.714286> now;
		turn rloleg to x-axis <32.582418> now;
		sleep 50;
	}
	if( TRUE )
	{
		turn rupleg to x-axis <-28.758242> now;
		turn lupleg to x-axis <12.247253> now;
		turn torso to y-axis <-3.148352> now;
		turn lloleg to x-axis <19.659341> now;
		turn lfoot to x-axis <-19.659341> now;
		turn rloleg to x-axis <28.758242> now;
		sleep 90;
	}
	if( TRUE )
	{
		turn rupleg to x-axis <-22.824176> now;
		turn lupleg to x-axis <2.824176> now;
		turn torso to y-axis <-1.879121> now;
		turn lloleg to x-axis <34.060440> now;
		turn rfoot to x-axis <-6.313187> now;
		sleep 70;
	}
	if( TRUE )
	{
		turn rupleg to x-axis <-11.604396> now;
		turn lupleg to x-axis <-6.725275> now;
		turn torso to y-axis <0.000000> now;
		turn lloleg to x-axis <39.401099> now;
		turn lfoot to x-axis <-13.956044> now;
		turn rloleg to x-axis <19.005495> now;
		turn rfoot to x-axis <-7.615385> now;
		sleep 50;
	}
	if( TRUE )
	{
		turn rupleg to x-axis <1.857143> now;
		turn lupleg to x-axis <-24.357143> now;
		turn torso to y-axis <1.879121> now;
		turn lloleg to x-axis <45.093407> now;
		turn lfoot to x-axis <-7.703297> now;
		turn rloleg to x-axis <3.560440> now;
		turn rfoot to x-axis <-4.934066> now;
		sleep 40;
	}
	if( TRUE )
	{
		turn rupleg to x-axis <7.148352> now;
		turn lupleg to x-axis <-28.181319> now;
		turn torso to y-axis <3.148352> now;
		turn rfoot to x-axis <-9.813187> now;
		sleep 50;
	}
	turn rupleg to x-axis <8.423077> now;
	turn lupleg to x-axis <-32.060440> now;
	turn torso to y-axis <4.203297> now;
	turn lloleg to x-axis <27.527473> now;
	turn lfoot to x-axis <-2.857143> now;
	turn rloleg to x-axis <24.670330> now;
	turn rfoot to x-axis <-33.313187> now;
	sleep 70;
}

walklegs()
{
	if( TRUE )
	{
		move pelvis to y-axis [0] now;
		turn rupleg to x-axis <5.670330> now;
		turn lupleg to x-axis <-26.467033> now;
		turn lloleg to x-axis <26.967033> now;
		turn rloleg to x-axis <26.967033> now;
		turn rfoot to x-axis <-19.824176> now;
		sleep 90;
	}
	if( TRUE )
	{
		turn rupleg to x-axis <-5.269231> now;
		turn lupleg to x-axis <-20.989011> now;
		turn lloleg to x-axis <20.945055> now;
		turn rloleg to x-axis <41.368132> now;
		turn rfoot to x-axis <-15.747253> now;
		sleep 70;
	}
	if( TRUE )
	{
		turn rupleg to x-axis <-9.071429> now;
		turn lupleg to x-axis <-12.670330> now;
		turn lloleg to x-axis <12.670330> now;
		turn rloleg to x-axis <43.571429> now;
		turn rfoot to x-axis <-12.016484> now;
		sleep 50;
	}
	if( TRUE )
	{
		turn rupleg to x-axis <-21.357143> now;
		turn lupleg to x-axis <2.824176> now;
		turn lloleg to x-axis <3.560440> now;
		turn lfoot to x-axis <-4.527473> now;
		turn rloleg to x-axis <52.505495> now;
		turn rfoot to x-axis <0.000000> now;
		sleep 40;
	}
	if( TRUE )
	{
		turn rupleg to x-axis <-35.923077> now;
		turn lupleg to x-axis <7.780220> now;
		turn lloleg to x-axis <8.203297> now;
		turn lfoot to x-axis <-12.571429> now;
		turn rloleg to x-axis <54.390110> now;
		sleep 50;
	}
	if( TRUE )
	{
		turn rupleg to x-axis <-37.780220> now;
		turn lupleg to x-axis <10.137363> now;
		turn lloleg to x-axis <13.302198> now;
		turn lfoot to x-axis <-16.714286> now;
		turn rloleg to x-axis <32.582418> now;
		sleep 70;
	}
	if( TRUE )
	{
		turn rupleg to x-axis <-28.758242> now;
		turn lupleg to x-axis <12.247253> now;
		turn lloleg to x-axis <19.659341> now;
		turn lfoot to x-axis <-19.659341> now;
		turn rloleg to x-axis <28.758242> now;
		sleep 90;
	}
	if( TRUE )
	{
		turn rupleg to x-axis <-22.824176> now;
		turn lupleg to x-axis <2.824176> now;
		turn lloleg to x-axis <34.060440> now;
		turn rfoot to x-axis <-6.313187> now;
		sleep 50;
	}
	if( TRUE )
	{
		turn rupleg to x-axis <-11.604396> now;
		turn lupleg to x-axis <-6.725275> now;
		turn lloleg to x-axis <39.401099> now;
		turn lfoot to x-axis <-13.956044> now;
		turn rloleg to x-axis <19.005495> now;
		turn rfoot to x-axis <-7.615385> now;
		sleep 30;
	}
	if( TRUE )
	{
		turn rupleg to x-axis <1.857143> now;
		turn lupleg to x-axis <-24.357143> now;
		turn lloleg to x-axis <45.093407> now;
		turn lfoot to x-axis <-7.703297> now;
		turn rloleg to x-axis <3.560440> now;
		turn rfoot to x-axis <-4.934066> now;
		sleep 40;
	}
	if( TRUE )
	{
		turn rupleg to x-axis <7.148352> now;
		turn lupleg to x-axis <-28.181319> now;
		turn rfoot to x-axis <-9.813187> now;
		sleep 50;
	}
	turn rupleg to x-axis <8.423077> now;
	turn lupleg to x-axis <-32.060440> now;
	turn lloleg to x-axis <27.527473> now;
	turn lfoot to x-axis <-2.857143> now;
	turn rloleg to x-axis <24.670330> now;
	turn rfoot to x-axis <-33.313187> now;
	sleep 70;
}


MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = bAiming;
		if( moving )
		{
			if( aiming )
			{
				Static_Var_3 = 1;
				call-script walklegs();
			}
			if( !aiming )
			{
				Static_Var_3 = 0;
				call-script walk();
			}
			justmoved = TRUE;
		}
		if( !moving )
		{
			Static_Var_3 = 1;
			if( justmoved )
			{
				turn rupleg to x-axis <0.000000> speed <200.071429>;
				turn rloleg to x-axis <0.000000> speed <200.071429>;
				turn rfoot to x-axis <0.000000> speed <200.071429>;
				turn lupleg to x-axis <0.000000> speed <200.071429>;
				turn lloleg to x-axis <0.000000> speed <200.071429>;
				turn lfoot to x-axis <0.000000> speed <200.071429>;
				if( !aiming )
				{
					turn torso to x-axis <0> now; //untilt forward
					turn torso to y-axis <0.000000> speed <90.027473>;
					turn ruparm to x-axis <0.000000> speed <200.071429>;
//					turn luparm to x-axis <0.000000> speed <200.071429>;
				}
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

Toggle(t,value) 
{

if(t==1)
	{
if(value==0)
{
sleep 100;  //10th second
aimer = 1;  //normaly 1
}

if(value==1)
{
sleep 100;  //10th second
aimer = 2;  //normaly 2
}
	}

}

Create()
{
	//alert to dirt
	turn armhold to x-axis <-45.000000> speed <250.000000>; //upspring
	turn ruparm to x-axis <0.000000> speed <250.000000>; 
	turn ruparm to y-axis <0.000000> speed <250.000000>; 
	turn ruparm to z-axis <0.000000> speed <250.000000>; 
	turn rarm to x-axis <2.000000> speed <250.000000>;      //
	turn rarm to y-axis <0.000000> speed <250.000000>;  
	turn rarm to z-axis <-12.000000> speed <250.000000>;    //up
	turn rloarm to x-axis <47.000000> speed <250.000000>;   //up 
	turn rloarm to y-axis <76.000000> speed <250.000000>;   //up 
	turn rloarm to z-axis <-47.000000> speed <250.000000>;   //up 
	turn luparm to x-axis <12.000000> speed <250.000000>;       //up
	turn luparm to y-axis <0.000000> speed <250.000000>;  
	turn luparm to z-axis <0.000000> speed <250.000000>;  
	turn larm to x-axis <-35.000000> speed <250.000000>;       //up 
	turn larm to y-axis <-3.000000> speed <250.000000>;       //up 
	turn larm to z-axis <22.000000> speed <250.000000>;       //up 
	turn lloarm to x-axis <92.000000> speed <250.000000>;    // up 
	turn lloarm to y-axis <0.000000> speed <250.000000>;  
	turn lloarm to z-axis <94.000000> speed <250.000000>;  //upspring

	hide flare;
	hide ac1;
	hide ac2;
	iscloak = 0;
	aimer = 1; 
	gun1 = 0; //for double barrel mgun
	dead = 0;
	bMoving = FALSE;
	bAiming = 0;
	Static_Var_3 = 1;
	Static_Var_5 = 0;
	reloading = 1;
	start-script MotionControl();
	start-script RestoreAfterDelay();
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
}

StartMoving()
{	
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

AimFromWeapon1(piecenum)
{
	piecenum = armhold; //better angle
}

QueryWeapon1(piecenum)
{
	piecenum = flare;
}

AimFromWeapon2(piecenum)
{
	piecenum = armhold; 
}

QueryWeapon2(piecenum)
{
if (gun1 == 0)
	{
	piecenum = ac2;
	}
if (gun1 == 1)
	{
	piecenum = ac1;
	}
}


AimWeapon1(Func_Var_1, Func_Var_2)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;
	while( !Static_Var_3 )
	{
		sleep 5;
	}
	if ( aimer == 2 )
	{
		return 0;
	}
	if ( aimer == 1 )
	{
		//torso	
		turn torso to x-axis <5.000000> speed <250.000000>;
		turn torso to y-axis <0.000000> speed <250.000000>;
		turn torso to z-axis <0.000000> speed <250.000000>;	
		//head	
		turn head to x-axis <0.000000> speed <250.000000>;
		turn head to y-axis <0.000000> speed <250.000000>;
		turn head to z-axis <0.000000> speed <250.000000>;	
		//rarm	
		turn ruparm to x-axis <-55.000000> speed <250.000000>;
		turn ruparm to y-axis <0.000000> speed <250.000000>;
		turn ruparm to z-axis <0.000000> speed <250.000000>;
		
		turn rarm to x-axis <13.000000> speed <250.000000>;
		turn rarm to y-axis <46.000000> speed <250.000000>;
		turn rarm to z-axis <-9.000000> speed <250.000000>;
		
		turn rloarm to x-axis <16.000000> speed <250.000000>;
		turn rloarm to y-axis <-23.000000> speed <250.000000>;
		turn rloarm to z-axis <-11.000000> speed <250.000000>;
		
		turn gun to x-axis <17.0> speed <250.000000>;
		turn gun to y-axis <-19.8> speed <250.000000>; //-20 is dead straight 
		turn gun to z-axis <2.0> speed <250.000000>;
		//larm
		turn luparm to x-axis <-70.000000> speed <250.000000>;
		turn luparm to y-axis <-20.000000> speed <250.000000>;
		turn luparm to z-axis <10.000000> speed <250.000000>;
		
		turn larm to x-axis <-13.000000> speed <250.000000>;
		turn larm to y-axis <-60.000000> speed <250.000000>;
		turn larm to z-axis <-9.000000> speed <250.000000>;
		
		turn lloarm to x-axis <73.000000> speed <250.000000>;
		turn lloarm to y-axis <19.000000> speed <250.000000>;
		turn lloarm to z-axis <58.000000> speed <250.000000>;
		
		//aim
		turn turret to y-axis Func_Var_1 speed <350.000000>;
		turn armhold to x-axis <0.000000> - Func_Var_2 speed <250.000000>;
		wait-for-turn turret around y-axis;
		wait-for-turn armhold around x-axis;  //need to make sure!
		wait-for-turn lloarm around x-axis; //stil setting up
		//iscloak= get 76; // check if cloaked
		start-script RestoreAfterDelay();
		return (1);
	}
}

Shot1()
{
	//recoil
	/*
	//set 76 to 0; //turn off cloak for fliker
	//emit-sfx 1024 from flare;
	sleep 50;
	turn gun to x-axis <-2.000000> speed <1250.000000>;
	sleep 250;
	turn gun to x-axis <0.000000> speed <250.000000>;
	sleep 800;
	if ( rand (1,3) == 3 ) turn armhold to x-axis <15.000000> speed <150.000000>; //check the sexy shot
	//return (1);
	*/	
}

Shot2()
{
//set 76 to 0;
  if (gun1 == 0)
	{
	emit-sfx 1024 from ac1;
	gun1 = 1;
	sleep 300;
	if ( iscloak ==1 )
		{
		//set 76 to 1; //turn on cloak for fliker
		}
	return 0;
	}
  if (gun1 == 1)
	{
	emit-sfx 1024 from ac2;
	gun1 = 0;
		sleep 300;
	if ( iscloak ==1 )
		{
		//set 76 to 1; //turn on cloak for fliker
		}
	return 0;
	}
}

AimFromWeapon3(piecenum)
{
	piecenum = armhold; //better angle
}

QueryWeapon3(piecenum)
{
	piecenum = flare;
}

AimWeapon3(Func_Var_1, Func_Var_2)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;
	
	while( !Static_Var_3 )
	{
		sleep 5;
	}
	//torso	
	turn torso to x-axis <5.000000> speed <250.000000>;
	turn torso to y-axis <0.000000> speed <250.000000>;
	turn torso to z-axis <0.000000> speed <250.000000>;	
	//head	
	turn head to x-axis <0.000000> speed <250.000000>;
	turn head to y-axis <0.000000> speed <250.000000>;
	turn head to z-axis <0.000000> speed <250.000000>;	
	//rarm	
	turn ruparm to x-axis <-55.000000> speed <250.000000>;
	turn ruparm to y-axis <0.000000> speed <250.000000>;
	turn ruparm to z-axis <0.000000> speed <250.000000>;
	
	turn rarm to x-axis <13.000000> speed <250.000000>;
	turn rarm to y-axis <46.000000> speed <250.000000>;
	turn rarm to z-axis <-9.000000> speed <250.000000>;
	
	turn rloarm to x-axis <16.000000> speed <250.000000>;
	turn rloarm to y-axis <-23.000000> speed <250.000000>;
	turn rloarm to z-axis <-11.000000> speed <250.000000>;
	
	turn gun to x-axis <17.0> speed <250.000000>;
	turn gun to y-axis <-19.8> speed <250.000000>; //-20 is dead straight 
	turn gun to z-axis <2.0> speed <250.000000>;
	//larm
	turn luparm to x-axis <-70.000000> speed <250.000000>;
	turn luparm to y-axis <-20.000000> speed <250.000000>;
	turn luparm to z-axis <10.000000> speed <250.000000>;
	
	turn larm to x-axis <-13.000000> speed <250.000000>;
	turn larm to y-axis <-60.000000> speed <250.000000>;
	turn larm to z-axis <-9.000000> speed <250.000000>;
	
	turn lloarm to x-axis <73.000000> speed <250.000000>;
	turn lloarm to y-axis <19.000000> speed <250.000000>;
	turn lloarm to z-axis <58.000000> speed <250.000000>;
	
	//aim
	turn turret to y-axis Func_Var_1 speed <350.000000>;
	turn armhold to x-axis <0.000000> - Func_Var_2 speed <250.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn armhold around x-axis;  //need to make sure!
	wait-for-turn lloarm around x-axis; //stil setting up
	//iscloak= get 76; // check if cloaked
	start-script RestoreAfterDelay();
	return (1);
}

lua_QueryNanoPiece() 
{
  return 0;
}

QueryNanoPiece(piecenum)
{
	piecenum = nanospray;
	//call-script lua_QueryNanoPiece(piecenum);
}

StopBuilding(){
	set INBUILDSTANCE to 0;
	if (!bAiming){
		start-script RestoreAfterDelay();
	}
}

StartBuilding(heading, pitch) {
	//larm
	turn luparm to x-axis <-60.000000> speed <250.000000>;
	turn luparm to y-axis <-15.000000> speed <250.000000>;
	turn luparm to z-axis <10.000000> speed <250.000000>;
	
	turn larm to x-axis <5.000000> speed <250.000000>;
	turn larm to y-axis <-30.000000> speed <250.000000>;
	turn larm to z-axis <-26.000000> speed <250.000000>;
	
	turn lloarm to y-axis <-37.000000> speed <250.000000>;
	turn lloarm to z-axis <152.000000> speed <450.000000>;
	turn gunpod to y-axis <90.000000> speed <350.000000>;
	
	turn turret to y-axis heading speed <350.000000>;
	turn lloarm to x-axis <0.000000> - pitch speed <250.000000>;

	
	set INBUILDSTANCE to 1;
}

Killed(severity, corpsetype)
{
	dead = 1;
	//turn turret to y-axis <0> speed <500.000000>;
	if( severity <= 98 )
	{
		turn base to x-axis <79> speed <80.000000>;
		turn rloleg to x-axis <25> speed <250.000000>;	
		turn lupleg to x-axis <7> speed <250.000000>;	
		turn lupleg to y-axis <34> speed <250.000000>;	
		turn lupleg to z-axis <-9> speed <250.000000>;	
		sleep 200; //give time to fall
		turn luparm to y-axis <18> speed <350.000000>;	
		turn luparm to z-axis <-45> speed <350.000000>;
		sleep 650;
		//emit-sfx 1026 from turret; //impact

		sleep 500;
/*
		explode gun type BITMAPONLY;
		explode head type BITMAPONLY;
		explode pelvis type BITMAPONLY;
		explode lloarm type BITMAPONLY;
		explode luparm type BITMAPONLY;
		explode lloleg type BITMAPONLY;
		explode lupleg type BITMAPONLY;
		explode rloarm type BITMAPONLY;
		explode rloleg type BITMAPONLY;
		explode ruparm type BITMAPONLY;
		explode rupleg type BITMAPONLY;
		explode torso type BITMAPONLY;
*/
		corpsetype = 1;
		return (0);
	}
	if( severity >= 99 )  //over killed
	{
		corpsetype = 2;  //no corpes
		explode gun type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP2;
		explode head type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP3;
		explode pelvis type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP4;
		explode lloarm type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP5;
		explode luparm type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP1;
		explode lloleg type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP2;
		explode lupleg type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP4;
		explode rloarm type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP5;
		explode rloleg type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP1;
		explode ruparm type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP2;
		explode rupleg type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP3;
		explode torso type SHATTER | EXPLODE_ON_HIT | BITMAP5;
		return (0);
	}
}

