#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, scaffold, trolleyb, trolleyu, clampb1, clampb2, clampu1, clampu2, missile;

static-var  gun_1;

// Signal definitions
#define SIG_AIM				2


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	var Func_Var_4;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			Func_Var_4 = Rand( 1, 4 );
			if( Func_Var_4 == 1 )
			{
				emit-sfx smoketype from base;
			}
			if( Func_Var_4 == 2 )
			{
				emit-sfx smoketype from trolleyu;
			}
			if( Func_Var_4 == 3 )
			{
				emit-sfx smoketype from trolleyb;
			}
			if( Func_Var_4 == 4 )
			{
				emit-sfx smoketype from scaffold;
			}
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	gun_1 = 1;
	start-script SmokeUnit();
}

AimWeapon1(heading, pitch)
{
	turn clampb1 to y-axis <0> speed <20>;
	turn clampb2 to y-axis <0> speed <20>;
	turn clampu1 to y-axis <0> speed <20>;
	turn clampu2 to y-axis <0> speed <20>;
	move missile to y-axis <-100> now;
	return (1);
}

Shot1()
{
	turn clampb1 to y-axis <-65> speed <200>;
	turn clampb2 to y-axis <65> speed <200>;
	turn clampu1 to y-axis <-65> speed <200>;
	turn clampu2 to y-axis <65> speed <200>;
	sleep 10;
	move missile to y-axis [-40] now;
	wait-for-turn clampb1 around y-axis;
	move missile to y-axis <0> speed [11];
	turn clampb1 to y-axis <0> speed <20>;
	turn clampb2 to y-axis <0> speed <20>;
	turn clampu1 to y-axis <0> speed <20>;
	turn clampu2 to y-axis <0> speed <20>;
}

QueryWeapon1(piecenum)
{
	piecenum = missile;
}

AimFromWeapon1(piecenum)
{
	piecenum = missile;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type BITMAPONLY | BITMAP1;
		explode scaffold type BITMAPONLY | BITMAP2;
		explode clampb1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode clampb2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode clampu1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode clampu2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode trolleyu type BITMAPONLY | BITMAP3;
		explode trolleyb type BITMAPONLY | BITMAP4;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type BITMAPONLY | BITMAP1;
		explode scaffold type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode clampb1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode clampb2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode clampu1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode clampu2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode trolleyu type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode trolleyb type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode body type SHATTER | BITMAP4;
		explode scaffold type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode clampb1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode clampb2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode clampu1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode clampu2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode trolleyu type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode trolleyb type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	explode body type SHATTER | BITMAP4;
	explode scaffold type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode clampb1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode clampb2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode clampu1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode clampu2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode trolleyu type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode trolleyb type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
}
